%!PS-Adobe-3.0
%%Title: convexhull.cpp
%%For: yicheng-wang
%%Creator: NVIM v0.1.3-128-gf887037
%%CreationDate: Sat Nov  5 00:39:07 2016
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 61 42 529 752
%%DocumentMedia: letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: letter
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/local/share/nvim/runtime/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/local/share/nvim/runtime/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
612 792 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(convexhull.cpp                                                                  Page 1)61.2 744.9 ms
F0 sf
0.498 0.125 0.498 r
(     1)61.2 724.9 ms
0 0.125 0.251 r
(//from stanford)109.2 724.9 ms
0.498 0.125 0.498 r
(     2)61.2 714.9 ms
(     3)61.2 704.9 ms
0 0.125 0.251 r
(// Compute the 2D convex hull of a set of points using the monotone chain)109.2 704.9 ms
0.498 0.125 0.498 r
(     4)61.2 694.9 ms
0 0.125 0.251 r
(// algorithm.  Eliminate redundant points from the hull if REMOVE_REDUNDANT is)109.2 694.9 ms
( )109.2 684.9 ms
0.498 0.125 0.498 r
(     5)61.2 674.9 ms
0 0.125 0.251 r
(// #defined.)109.2 674.9 ms
0.498 0.125 0.498 r
(     6)61.2 664.9 ms
0 0.125 0.251 r
(//)109.2 664.9 ms
0.498 0.125 0.498 r
(     7)61.2 654.9 ms
0 0.125 0.251 r
(// Running time: O\(n log n\))109.2 654.9 ms
0.498 0.125 0.498 r
(     8)61.2 644.9 ms
0 0.125 0.251 r
(//)109.2 644.9 ms
0.498 0.125 0.498 r
(     9)61.2 634.9 ms
0 0.125 0.251 r
(//   INPUT:   a vector of input points, unordered.)109.2 634.9 ms
0.498 0.125 0.498 r
(    10)61.2 624.9 ms
0 0.125 0.251 r
(//   OUTPUT:  a vector of points in the convex hull, counterclockwise, startin)109.2 624.9 ms
(g)109.2 614.9 ms
0.498 0.125 0.498 r
(    11)61.2 604.9 ms
0 0.125 0.251 r
(//            with bottommost/leftmost point)109.2 604.9 ms
0.498 0.125 0.498 r
(    12)61.2 594.9 ms
(    13)61.2 584.9 ms
(#include )109.2 584.9 ms
0 g
(<cstdio>)s
0.498 0.125 0.498 r
(    14)61.2 574.9 ms
(#include )109.2 574.9 ms
0 g
(<cassert>)s
0.498 0.125 0.498 r
(    15)61.2 564.9 ms
(#include )109.2 564.9 ms
0 g
(<vector>)s
0.498 0.125 0.498 r
(    16)61.2 554.9 ms
(#include )109.2 554.9 ms
0 g
(<algorithm>)s
0.498 0.125 0.498 r
(    17)61.2 544.9 ms
(#include )109.2 544.9 ms
0 g
(<cmath>)s
0.498 0.125 0.498 r
(    18)61.2 534.9 ms
0 0.125 0.251 r
(// BEGIN CUT)109.2 534.9 ms
0.498 0.125 0.498 r
(    19)61.2 524.9 ms
(#include )109.2 524.9 ms
0 g
(<map>)s
0.498 0.125 0.498 r
(    20)61.2 514.9 ms
0 0.125 0.251 r
(// END CUT)109.2 514.9 ms
0.498 0.125 0.498 r
(    21)61.2 504.9 ms
(    22)61.2 494.9 ms
0.498 0.498 0 r
(using)109.2 494.9 ms
0 g
( )s
0.498 0.125 0.498 r
(namespace)s
0 g
( )s
0.376 g
(std)s
0 g
(;)s
0.498 0.125 0.498 r
(    23)61.2 484.9 ms
(    24)61.2 474.9 ms
(#define REMOVE_REDUNDANT)109.2 474.9 ms
(    25)61.2 464.9 ms
(    26)61.2 454.9 ms
(typedef)109.2 454.9 ms
0 g
( )s
0.498 0.125 0.498 r
(double)s
0 g
( T;)s
0.498 0.125 0.498 r
(    27)61.2 444.9 ms
(const)109.2 444.9 ms
0 g
( T EPS = )s
0.376 g
(1e-7)s
0 g
(;)s
0.498 0.125 0.498 r
(    28)61.2 434.9 ms
(struct)109.2 434.9 ms
0 g
( PT { )s
0.498 0.125 0.498 r
(    29)61.2 424.9 ms
0 g
(  T x, y; )109.2 424.9 ms
0.498 0.125 0.498 r
(    30)61.2 414.9 ms
0 g
(  )109.2 414.9 ms
0.498 0.125 0.498 r
(PT)s
0 g
(\(\) {} )s
0.498 0.125 0.498 r
(    31)61.2 404.9 ms
0 g
(  )109.2 404.9 ms
0.498 0.125 0.498 r
(PT)s
0 g
(\(T x, T y\) : )s
0.498 0.125 0.498 r
(x)s
0 g
(\(x\), )s
0.498 0.125 0.498 r
(y)s
0 g
(\(y\) {})s
0.498 0.125 0.498 r
(    32)61.2 394.9 ms
0 g
(  )109.2 394.9 ms
0.498 0.125 0.498 r
(bool)s
0 g
( )s
0.498 0.125 0.498 r
(operator)s
0 g
(<\()s
0.498 0.125 0.498 r
(const)s
0 g
( PT &rhs\) )s
0.498 0.125 0.498 r
(const)s
0 g
( { )s
0.498 0.498 0 r
(return)s
0 g
( )s
0.498 0.125 0.498 r
(make_pair)s
0 g
(\(y,x\) < )s
0.498 0.125 0.498 r
(make_pair)s
0 g
(\(rhs.)s
(y,rhs.x\); })109.2 384.9 ms
0.498 0.125 0.498 r
(    33)61.2 374.9 ms
0 g
(  )109.2 374.9 ms
0.498 0.125 0.498 r
(bool)s
0 g
( )s
0.498 0.125 0.498 r
(operator)s
0 g
(==\()s
0.498 0.125 0.498 r
(const)s
0 g
( PT &rhs\) )s
0.498 0.125 0.498 r
(const)s
0 g
( { )s
0.498 0.498 0 r
(return)s
0 g
( )s
0.498 0.125 0.498 r
(make_pair)s
0 g
(\(y,x\) == )s
0.498 0.125 0.498 r
(make_pair)s
0 g
(\(rh)s
(s.y,rhs.x\); })109.2 364.9 ms
0.498 0.125 0.498 r
(    34)61.2 354.9 ms
0 g
(};)109.2 354.9 ms
0.498 0.125 0.498 r
(    35)61.2 344.9 ms
(    36)61.2 334.9 ms
0 g
(T )109.2 334.9 ms
0.498 0.125 0.498 r
(cross)s
0 g
(\(PT p, PT q\) { )s
0.498 0.498 0 r
(return)s
0 g
( p.x*q.y-p.y*q.x; })s
0.498 0.125 0.498 r
(    37)61.2 324.9 ms
0 g
(T )109.2 324.9 ms
0.498 0.125 0.498 r
(area2)s
0 g
(\(PT a, PT b, PT c\) { )s
0.498 0.498 0 r
(return)s
0 g
( )s
0.498 0.125 0.498 r
(cross)s
0 g
(\(a,b\) + )s
0.498 0.125 0.498 r
(cross)s
0 g
(\(b,c\) + )s
0.498 0.125 0.498 r
(cross)s
0 g
(\(c,a\); })s
0.498 0.125 0.498 r
(    38)61.2 314.9 ms
(    39)61.2 304.9 ms
(#ifdef REMOVE_REDUNDANT)109.2 304.9 ms
(    40)61.2 294.9 ms
(bool)109.2 294.9 ms
0 g
( )s
0.498 0.125 0.498 r
(between)s
0 g
(\()s
0.498 0.125 0.498 r
(const)s
0 g
( PT &a, )s
0.498 0.125 0.498 r
(const)s
0 g
( PT &b, )s
0.498 0.125 0.498 r
(const)s
0 g
( PT &c\) {)s
0.498 0.125 0.498 r
(    41)61.2 284.9 ms
0 g
(  )109.2 284.9 ms
0.498 0.498 0 r
(return)s
0 g
( \()s
0.498 0.125 0.498 r
(fabs)s
0 g
(\()s
0.498 0.125 0.498 r
(area2)s
0 g
(\(a,b,c\)\) < EPS && \(a.x-b.x\)*\(c.x-b.x\) <= )s
0.376 g
(0)s
0 g
( && \(a.y-b.y\)*\(c)s
(.y-b.y\) <= )109.2 274.9 ms
0.376 g
(0)s
0 g
(\);)s
0.498 0.125 0.498 r
(    42)61.2 264.9 ms
0 g
(})109.2 264.9 ms
0.498 0.125 0.498 r
(    43)61.2 254.9 ms
(#endif)109.2 254.9 ms
(    44)61.2 244.9 ms
(    45)61.2 234.9 ms
(void)109.2 234.9 ms
0 g
( )s
0.498 0.125 0.498 r
(ConvexHull)s
0 g
(\()s
0.498 0.125 0.498 r
(vector)s
0 g
(<PT> &pts\) {)s
0.498 0.125 0.498 r
(    46)61.2 224.9 ms
0 g
(  )109.2 224.9 ms
0.498 0.125 0.498 r
(sort)s
0 g
(\(pts.)s
0.498 0.125 0.498 r
(begin)s
0 g
(\(\), pts.)s
0.498 0.125 0.498 r
(end)s
0 g
(\(\)\);)s
0.498 0.125 0.498 r
(    47)61.2 214.9 ms
0 g
(  pts.)109.2 214.9 ms
0.498 0.125 0.498 r
(erase)s
0 g
(\()s
0.498 0.125 0.498 r
(unique)s
0 g
(\(pts.)s
0.498 0.125 0.498 r
(begin)s
0 g
(\(\), pts.)s
0.498 0.125 0.498 r
(end)s
0 g
(\(\)\), pts.)s
0.498 0.125 0.498 r
(end)s
0 g
(\(\)\);)s
0.498 0.125 0.498 r
(    48)61.2 204.9 ms
0 g
(  )109.2 204.9 ms
0.498 0.125 0.498 r
(vector)s
0 g
(<PT> up, dn;)s
0.498 0.125 0.498 r
(    49)61.2 194.9 ms
0 g
(  )109.2 194.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = )s
0.376 g
(0)s
0 g
(; i < pts.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\); i++\) {)s
0.498 0.125 0.498 r
(    50)61.2 184.9 ms
0 g
(    )109.2 184.9 ms
0.498 0.498 0 r
(while)s
0 g
( \(up.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\) > )s
0.376 g
(1)s
0 g
( && )s
0.498 0.125 0.498 r
(area2)s
0 g
(\(up[up.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\)-)s
0.376 g
(2)s
0 g
(], up.)s
0.498 0.125 0.498 r
(back)s
0 g
(\(\), pts[i]\) >= )s
0.376 g
(0)s
0 g
(\) up)s
(.)109.2 174.9 ms
0.498 0.125 0.498 r
(pop_back)s
0 g
(\(\);)s
0.498 0.125 0.498 r
(    51)61.2 164.9 ms
0 g
(    )109.2 164.9 ms
0.498 0.498 0 r
(while)s
0 g
( \(dn.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\) > )s
0.376 g
(1)s
0 g
( && )s
0.498 0.125 0.498 r
(area2)s
0 g
(\(dn[dn.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\)-)s
0.376 g
(2)s
0 g
(], dn.)s
0.498 0.125 0.498 r
(back)s
0 g
(\(\), pts[i]\) <= )s
0.376 g
(0)s
0 g
(\) dn)s
(.)109.2 154.9 ms
0.498 0.125 0.498 r
(pop_back)s
0 g
(\(\);)s
0.498 0.125 0.498 r
(    52)61.2 144.9 ms
0 g
(    up.)109.2 144.9 ms
0.498 0.125 0.498 r
(push_back)s
0 g
(\(pts[i]\);)s
0.498 0.125 0.498 r
(    53)61.2 134.9 ms
0 g
(    dn.)109.2 134.9 ms
0.498 0.125 0.498 r
(push_back)s
0 g
(\(pts[i]\);)s
0.498 0.125 0.498 r
(    54)61.2 124.9 ms
0 g
(  })109.2 124.9 ms
0.498 0.125 0.498 r
(    55)61.2 114.9 ms
0 g
(  pts = dn;)109.2 114.9 ms
0.498 0.125 0.498 r
(    56)61.2 104.9 ms
0 g
(  )109.2 104.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = \()s
0.498 0.125 0.498 r
(int)s
0 g
(\) up.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\) - )s
0.376 g
(2)s
0 g
(; i >= )s
0.376 g
(1)s
0 g
(; i--\) pts.)s
0.498 0.125 0.498 r
(push_back)s
0 g
(\(up[i]\);)s
0.498 0.125 0.498 r
(    57)61.2 94.9 ms
0 g
(  )109.2 94.9 ms
0.498 0.125 0.498 r
(    58)61.2 84.9 ms
(#ifdef REMOVE_REDUNDANT)109.2 84.9 ms
(    59)61.2 74.9 ms
0 g
(  )109.2 74.9 ms
0.498 0.498 0 r
(if)s
0 g
( \(pts.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\) <= )s
0.376 g
(2)s
0 g
(\) )s
0.498 0.498 0 r
(return)s
0 g
(;)s
0.498 0.125 0.498 r
(    60)61.2 64.9 ms
0 g
(  dn.)109.2 64.9 ms
0.498 0.125 0.498 r
(clear)s
0 g
(\(\);)s
0.498 0.125 0.498 r
(    61)61.2 54.9 ms
0 g
(  dn.)109.2 54.9 ms
0.498 0.125 0.498 r
(push_back)s
0 g
(\(pts[)s
0.376 g
(0)s
0 g
(]\);)s
0.498 0.125 0.498 r
(    62)61.2 44.9 ms
0 g
(  dn.)109.2 44.9 ms
0.498 0.125 0.498 r
(push_back)s
0 g
(\(pts[)s
0.376 g
(1)s
0 g
(]\);)s
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(convexhull.cpp                                                                  Page 2)61.2 744.9 ms
F0 sf
0.498 0.125 0.498 r
(    63)61.2 724.9 ms
0 g
(  )109.2 724.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = )s
0.376 g
(2)s
0 g
(; i < pts.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\); i++\) {)s
0.498 0.125 0.498 r
(    64)61.2 714.9 ms
0 g
(    )109.2 714.9 ms
0.498 0.498 0 r
(if)s
0 g
( \()s
0.498 0.125 0.498 r
(between)s
0 g
(\(dn[dn.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\)-)s
0.376 g
(2)s
0 g
(], dn[dn.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\)-)s
0.376 g
(1)s
0 g
(], pts[i]\)\) dn.)s
0.498 0.125 0.498 r
(pop_back)s
0 g
(\(\);)s
0.498 0.125 0.498 r
(    65)61.2 704.9 ms
0 g
(    dn.)109.2 704.9 ms
0.498 0.125 0.498 r
(push_back)s
0 g
(\(pts[i]\);)s
0.498 0.125 0.498 r
(    66)61.2 694.9 ms
0 g
(  })109.2 694.9 ms
0.498 0.125 0.498 r
(    67)61.2 684.9 ms
0 g
(  )109.2 684.9 ms
0.498 0.498 0 r
(if)s
0 g
( \(dn.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\) >= )s
0.376 g
(3)s
0 g
( && )s
0.498 0.125 0.498 r
(between)s
0 g
(\(dn.)s
0.498 0.125 0.498 r
(back)s
0 g
(\(\), dn[)s
0.376 g
(0)s
0 g
(], dn[)s
0.376 g
(1)s
0 g
(]\)\) {)s
0.498 0.125 0.498 r
(    68)61.2 674.9 ms
0 g
(    dn[)109.2 674.9 ms
0.376 g
(0)s
0 g
(] = dn.)s
0.498 0.125 0.498 r
(back)s
0 g
(\(\);)s
0.498 0.125 0.498 r
(    69)61.2 664.9 ms
0 g
(    dn.)109.2 664.9 ms
0.498 0.125 0.498 r
(pop_back)s
0 g
(\(\);)s
0.498 0.125 0.498 r
(    70)61.2 654.9 ms
0 g
(  })109.2 654.9 ms
0.498 0.125 0.498 r
(    71)61.2 644.9 ms
0 g
(  pts = dn;)109.2 644.9 ms
0.498 0.125 0.498 r
(    72)61.2 634.9 ms
(#endif)109.2 634.9 ms
(    73)61.2 624.9 ms
0 g
(})109.2 624.9 ms
0.498 0.125 0.498 r
(    74)61.2 614.9 ms
(    75)61.2 604.9 ms
0 0.125 0.251 r
(// BEGIN CUT)109.2 604.9 ms
0.498 0.125 0.498 r
(    76)61.2 594.9 ms
0 0.125 0.251 r
(// The following code solves SPOJ problem #26: Build the Fence \(BSHEEP\))109.2 594.9 ms
0.498 0.125 0.498 r
(    77)61.2 584.9 ms
(    78)61.2 574.9 ms
(int)109.2 574.9 ms
0 g
( )s
0.498 0.125 0.498 r
(main)s
0 g
(\(\) {)s
0.498 0.125 0.498 r
(    79)61.2 564.9 ms
0 g
(  )109.2 564.9 ms
0.498 0.125 0.498 r
(int)s
0 g
( t;)s
0.498 0.125 0.498 r
(    80)61.2 554.9 ms
0 g
(  )109.2 554.9 ms
0.498 0.125 0.498 r
(scanf)s
0 g
(\("%d", &t\);)s
0.498 0.125 0.498 r
(    81)61.2 544.9 ms
0 g
(  )109.2 544.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( caseno = )s
0.376 g
(0)s
0 g
(; caseno < t; caseno++\) {)s
0.498 0.125 0.498 r
(    82)61.2 534.9 ms
0 g
(    )109.2 534.9 ms
0.498 0.125 0.498 r
(int)s
0 g
( n;)s
0.498 0.125 0.498 r
(    83)61.2 524.9 ms
0 g
(    )109.2 524.9 ms
0.498 0.125 0.498 r
(scanf)s
0 g
(\("%d", &n\);)s
0.498 0.125 0.498 r
(    84)61.2 514.9 ms
0 g
(    )109.2 514.9 ms
0.498 0.125 0.498 r
(vector)s
0 g
(<PT> )s
0.498 0.125 0.498 r
(v)s
0 g
(\(n\);)s
0.498 0.125 0.498 r
(    85)61.2 504.9 ms
0 g
(    )109.2 504.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = )s
0.376 g
(0)s
0 g
(; i < n; i++\) )s
0.498 0.125 0.498 r
(scanf)s
0 g
(\("%lf%lf", &v[i].x, &v[i].y\);)s
0.498 0.125 0.498 r
(    86)61.2 494.9 ms
0 g
(    )109.2 494.9 ms
0.498 0.125 0.498 r
(vector)s
0 g
(<PT> )s
0.498 0.125 0.498 r
(h)s
0 g
(\(v\);)s
0.498 0.125 0.498 r
(    87)61.2 484.9 ms
0 g
(    )109.2 484.9 ms
0.498 0.125 0.498 r
(map)s
0 g
(<PT,)s
0.498 0.125 0.498 r
(int)s
0 g
(> index;)s
0.498 0.125 0.498 r
(    88)61.2 474.9 ms
0 g
(    )109.2 474.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = n-)s
0.376 g
(1)s
0 g
(; i >= )s
0.376 g
(0)s
0 g
(; i--\) index[v[i]] = i+)s
0.376 g
(1)s
0 g
(;)s
0.498 0.125 0.498 r
(    89)61.2 464.9 ms
0 g
(    )109.2 464.9 ms
0.498 0.125 0.498 r
(ConvexHull)s
0 g
(\(h\);)s
0.498 0.125 0.498 r
(    90)61.2 454.9 ms
0 g
(    )109.2 454.9 ms
0.498 0.125 0.498 r
(    91)61.2 444.9 ms
0 g
(    )109.2 444.9 ms
0.498 0.125 0.498 r
(double)s
0 g
( len = )s
0.376 g
(0)s
0 g
(;)s
0.498 0.125 0.498 r
(    92)61.2 434.9 ms
0 g
(    )109.2 434.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = )s
0.376 g
(0)s
0 g
(; i < h.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\); i++\) {)s
0.498 0.125 0.498 r
(    93)61.2 424.9 ms
0 g
(      )109.2 424.9 ms
0.498 0.125 0.498 r
(double)s
0 g
( dx = h[i].x - h[\(i+)s
0.376 g
(1)s
0 g
(\)%h.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\)].x;)s
0.498 0.125 0.498 r
(    94)61.2 414.9 ms
0 g
(      )109.2 414.9 ms
0.498 0.125 0.498 r
(double)s
0 g
( dy = h[i].y - h[\(i+)s
0.376 g
(1)s
0 g
(\)%h.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\)].y;)s
0.498 0.125 0.498 r
(    95)61.2 404.9 ms
0 g
(      len += )109.2 404.9 ms
0.498 0.125 0.498 r
(sqrt)s
0 g
(\(dx*dx+dy*dy\);)s
0.498 0.125 0.498 r
(    96)61.2 394.9 ms
0 g
(    })109.2 394.9 ms
0.498 0.125 0.498 r
(    97)61.2 384.9 ms
0 g
(    )109.2 384.9 ms
0.498 0.125 0.498 r
(    98)61.2 374.9 ms
0 g
(    )109.2 374.9 ms
0.498 0.498 0 r
(if)s
0 g
( \(caseno > )s
0.376 g
(0)s
0 g
(\) )s
0.498 0.125 0.498 r
(printf)s
0 g
(\("\\n"\);)s
0.498 0.125 0.498 r
(    99)61.2 364.9 ms
0 g
(    )109.2 364.9 ms
0.498 0.125 0.498 r
(printf)s
0 g
(\("%.2f\\n", len\);)s
0.498 0.125 0.498 r
(   100)61.2 354.9 ms
0 g
(    )109.2 354.9 ms
0.498 0.498 0 r
(for)s
0 g
( \()s
0.498 0.125 0.498 r
(int)s
0 g
( i = )s
0.376 g
(0)s
0 g
(; i < h.)s
0.498 0.125 0.498 r
(size)s
0 g
(\(\); i++\) {)s
0.498 0.125 0.498 r
(   101)61.2 344.9 ms
0 g
(      )109.2 344.9 ms
0.498 0.498 0 r
(if)s
0 g
( \(i > )s
0.376 g
(0)s
0 g
(\) )s
0.498 0.125 0.498 r
(printf)s
0 g
(\(" "\);)s
0.498 0.125 0.498 r
(   102)61.2 334.9 ms
0 g
(      )109.2 334.9 ms
0.498 0.125 0.498 r
(printf)s
0 g
(\("%d", index[h[i]]\);)s
0.498 0.125 0.498 r
(   103)61.2 324.9 ms
0 g
(    })109.2 324.9 ms
0.498 0.125 0.498 r
(   104)61.2 314.9 ms
0 g
(    )109.2 314.9 ms
0.498 0.125 0.498 r
(printf)s
0 g
(\("\\n"\);)s
0.498 0.125 0.498 r
(   105)61.2 304.9 ms
0 g
(  })109.2 304.9 ms
0.498 0.125 0.498 r
(   106)61.2 294.9 ms
0 g
(})109.2 294.9 ms
0.498 0.125 0.498 r
(   107)61.2 284.9 ms
(   108)61.2 274.9 ms
0 0.125 0.251 r
(// END CUT)109.2 274.9 ms
0.498 0.125 0.498 r
(   109)61.2 264.9 ms
0 g
(Contact GitHub )109.2 264.9 ms
re sp
%%PageTrailer
%%Trailer
%%Pages: 2
%%EOF
